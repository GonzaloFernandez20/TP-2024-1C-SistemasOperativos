{
	"settings": {
		"debug.onTaskErrors": "abort",
		"files.associations": {
			"*.h": "c",
			"cstdlib": "c",
			"cerrno": "c",
			"functional": "c",
			"string": "c",
			"array": "c",
			"string_view": "c",
			"initializer_list": "c",
			"utility": "c",
			"atomic": "c",
			"*.tcc": "c",
			"cstdint": "c",
			"random": "c",
			"ratio": "c",
			"system_error": "c",
			"tuple": "c",
			"type_traits": "c"
		},
		"C_Cpp.errorSquiggles": "disabled",
	},
	"folders": [
		{
			"path": "kernel"
		},
		{
			"path": "cpu"
		},
		{
			"path": "memoria"
		},
		{
			"path": "entradasalida"
		},
		{
			"path": "utils"
		}
	],
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "Build All",
				"command": "${workspaceFolder}/../buildAll.sh", // limpia la pantalla de la terminal nom√°s
				"type": "shell",
				"group": {
					"kind": "build",
					"isDefault": true
				},
				// "dependsOn": [
				// 	"build cpu",
				// 	"build kernel",
				// 	"build memoria",
				// 	"build entradasalida"
				// ],
				// "dependsOrder": "parallel",
				"problemMatcher": ["$gcc"]
			},
			{
				"label": "Clean All",
				"command": "${workspaceFolder}/../cleanAll.sh",
				"type": "shell",
				"group": {
				"kind": "none"
				},
				// "dependsOn": [
				// 	"clean cpu",
				// 	"clean kernel",
				// 	"clean memoria",
				// 	"clean entradasalida",
				// 	"clean utils"
				// ],
				// "dependsOrder": "parallel",
				"problemMatcher": ["$gcc"]
			},
			// {
			// 	"label": "Leak-Check All",
			// 	"command": "echo",
			// 	"type": "shell",
			// 	"group": {
			// 	"kind": "none",
			// 	"isDefault": true
			// 	},
			// 	"dependsOrder": "sequence",
			// 	"dependsOn":[
			// 		"leak-check memoria",
			// 		"leak-check cpu",
			// 		"leak-check kernel",
			// 		"leak-check entradasalida"
			// 	]
			// }
		]
	},
	"launch": {
		  "version": "0.2.0",
		  "compounds": [
			  {
				  "name": "Run All",
				  "configurations": [
					
					  "run memoria",
					  "run cpu",
					  "run kernel",
					  "run entradasalida"
				  ]
			  }
		  ]
	  }
}